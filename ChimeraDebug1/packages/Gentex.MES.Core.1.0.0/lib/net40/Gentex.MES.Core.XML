<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Gentex.MES.Core</name>
    </assembly>
    <members>
        <member name="T:Gentex.MES.Core.AppDomainTypeEnumerator`1">
            <summary>
            Enumerates types within the entire application domain that are assignable by a type.
            </summary>
            <typeparam name="T">The type to query the app domain by for all assignable types.</typeparam>
        </member>
        <member name="T:Gentex.MES.Core.ITypeEnumerator`1">
            <summary>
            Enumerates types that are assignable by a type.
            </summary>
            <typeparam name="T">The type to query by for all assignable types.</typeparam>
        </member>
        <member name="M:Gentex.MES.Core.ITypeEnumerator`1.GetTypes">
            <summary>
            Gets the types.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.AppDomainTypeEnumerator`1.GetTypes">
            <summary>
            Gets the types.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Gentex.MES.Core.Bus.BusRegistration">
            <summary>
            Registers command and event handlers through the IHandlerRegistration instance in service registry.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Bus.BusRegistration.Register(System.Type[])">
            <summary>
            Registers all command and event handlers in any assemblies that contain specified types.
            </summary>
            <param name="types">The types.</param>
        </member>
        <member name="T:Gentex.MES.Core.Bus.IHandlerRegistration">
            <summary>
            Defines a message handler registator.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Bus.IHandlerRegistration.RegisterHandler``1(System.Action{``0})">
            <summary>
            Registers the handler.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="handler">The handler.</param>
        </member>
        <member name="T:Gentex.MES.Core.Bus.InProcessBus">
            <summary>
            An in-process bus implementation, which manages all command and event handlers.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.Commanding.ICommandSender">
            <summary>
            Defines a command sender.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ICommandSender.Send``1(``0)">
            <summary>
            Sends the specified command.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="command">The command.</param>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.IEventPublisher">
            <summary>
            Defines an event publisher.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.IEventPublisher.Publish``1(``0)">
            <summary>
            Publishes the specified @event.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="event">The @event.</param>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.IEventDispatcher">
            <summary>
            Dispatches groups of events.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.IEventDispatcher.Dispatch(System.Collections.Generic.IEnumerable{Gentex.MES.Core.Eventing.Event})">
            <summary>
            Dispatches the specified events.
            </summary>
            <param name="events">The events.</param>
        </member>
        <member name="M:Gentex.MES.Core.Bus.InProcessBus.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Bus.InProcessBus"/> class.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Bus.InProcessBus.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Bus.InProcessBus"/> class.
            </summary>
            <param name="useTransactionScope">if set to <c>true</c> [use transaction scope].</param>
        </member>
        <member name="M:Gentex.MES.Core.Bus.InProcessBus.#ctor(System.Collections.Generic.IEnumerable{Gentex.MES.Core.Eventing.IEventDispatchHandler})">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Bus.InProcessBus"/> class.
            </summary>
            <param name="dispatchHandlers">The dispatch handlers.</param>
        </member>
        <member name="M:Gentex.MES.Core.Bus.InProcessBus.#ctor(System.Collections.Generic.IEnumerable{Gentex.MES.Core.Eventing.IEventDispatchHandler},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Bus.InProcessBus"/> class.
            </summary>
            <param name="dispatchHandlers">The dispatch handlers.</param>
            <param name="useTransactionScope">if set to <c>true</c> [use transaction scope].</param>
        </member>
        <member name="M:Gentex.MES.Core.Bus.InProcessBus.Send``1(``0)">
            <summary>
            Sends the specified command.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="command">The command.</param>
        </member>
        <member name="M:Gentex.MES.Core.Bus.InProcessBus.Publish``1(``0)">
            <summary>
            Publishes the specified @event.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="event">The @event.</param>
        </member>
        <member name="M:Gentex.MES.Core.Bus.InProcessBus.RegisterHandler``1(System.Action{``0})">
            <summary>
            Registers the handler.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:Gentex.MES.Core.Bus.InProcessBus.Dispatch(System.Collections.Generic.IEnumerable{Gentex.MES.Core.Eventing.Event})">
            <summary>
            Dispatches the specified events.
            </summary>
            <param name="events">The events.</param>
        </member>
        <member name="T:Gentex.MES.Core.Commanding.Command">
            <summary>
            The command base class.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.IMessage">
            <summary>
            Defines a message that flows through the MES system.
            </summary>
        </member>
        <member name="P:Gentex.MES.Core.Commanding.Command.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Gentex.MES.Core.Commanding.Command.AggregateId">
            <summary>
            Gets or sets the aggregate id.
            </summary>
            <value>The aggregate id.</value>
        </member>
        <member name="P:Gentex.MES.Core.Commanding.Command.ExpectedVersion">
            <summary>
            Gets or sets the expected version.
            </summary>
            <value>The expected version.</value>
        </member>
        <member name="P:Gentex.MES.Core.Commanding.Command.ExtensionData">
            <summary>
            Gets or sets the structure that contains extra data.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Runtime.Serialization.ExtensionDataObject"/> that contains data that is not recognized as belonging to the data contract.</returns>
        </member>
        <member name="T:Gentex.MES.Core.Commanding.ServiceModel.Client">
            <summary>
            Client implementation for sending domain commands.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.Commanding.ServiceModel.IClient">
            <summary>
            Client interface for executing a domain command.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.IClient.Execute(Gentex.MES.Core.Commanding.Command)">
            <summary>
            Executes the specified command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.IClient.Execute(System.Collections.Generic.List{Gentex.MES.Core.Commanding.Command})">
            <summary>
            Executes the specified commands.
            </summary>
            <param name="commands">The commands.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.Client.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.ServiceModel.Client"/> class.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.Client.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.ServiceModel.Client"/> class.
            </summary>
            <param name="binding">The binding.</param>
            <param name="remoteAddress">The remote address.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.Client.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.ServiceModel.Client"/> class.
            </summary>
            <param name="endpointConfigurationName">Name of the endpoint configuration.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.Client.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.ServiceModel.Client"/> class.
            </summary>
            <param name="endpointConfigurationName">Name of the endpoint configuration.</param>
            <param name="remoteAddress">The remote address.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.Client.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.ServiceModel.Client"/> class.
            </summary>
            <param name="endpointConfigurationName">Name of the endpoint configuration.</param>
            <param name="remoteAddress">The remote address.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.Client.Execute(Gentex.MES.Core.Commanding.Command)">
            <summary>
            Sends the specified command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.Client.Execute(System.Collections.Generic.List{Gentex.MES.Core.Commanding.Command})">
            <summary>
            Executes the specified commands.
            </summary>
            <param name="commands">The commands.</param>
        </member>
        <member name="T:Gentex.MES.Core.Commanding.ServiceModel.CommandingClient">
            <summary>
            Client for sending one way commands to the domain.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.CommandingClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.ServiceModel.Client"/> class.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.CommandingClient.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.ServiceModel.Client"/> class.
            </summary>
            <param name="binding">The binding.</param>
            <param name="remoteAddress">The remote address.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.CommandingClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.ServiceModel.Client"/> class.
            </summary>
            <param name="endpointConfigurationName">Name of the endpoint configuration.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.CommandingClient.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.ServiceModel.Client"/> class.
            </summary>
            <param name="endpointConfigurationName">Name of the endpoint configuration.</param>
            <param name="remoteAddress">The remote address.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.CommandingClient.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.ServiceModel.Client"/> class.
            </summary>
            <param name="endpointConfigurationName">Name of the endpoint configuration.</param>
            <param name="remoteAddress">The remote address.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.CommandingClient.Execute(Gentex.MES.Core.Commanding.Command)">
            <summary>
            Sends the specified command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.CommandingClient.Execute(System.Collections.Generic.List{Gentex.MES.Core.Commanding.Command})">
            <summary>
            Executes the specified commands.
            </summary>
            <param name="commands">The commands.</param>
        </member>
        <member name="T:Gentex.MES.Core.Commanding.ServiceModel.ICommandExecutor">
            <summary>
            Interface for sending commands to a WCF command service.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.ICommandExecutor.Execute(Gentex.MES.Core.Commanding.ServiceModel.ExecuteRequest)">
            <summary>
            Executes the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="T:Gentex.MES.Core.Commanding.ServiceModel.ExecuteRequest">
            <summary>
            Contract for sending a command to a command service for execution.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.ExecuteRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.ServiceModel.ExecuteRequest"/> class.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.ExecuteRequest.#ctor(Gentex.MES.Core.Commanding.Command)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.ServiceModel.ExecuteRequest"/> class.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.ExecuteRequest.#ctor(System.Collections.Generic.List{Gentex.MES.Core.Commanding.Command})">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.ServiceModel.ExecuteRequest"/> class.
            </summary>
            <param name="commands">The commands.</param>
        </member>
        <member name="P:Gentex.MES.Core.Commanding.ServiceModel.ExecuteRequest.Commands">
            <summary>
            Gets or sets the command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="T:Gentex.MES.Core.Commanding.ServiceModel.ICommandService">
            <summary>
            Interface for sending commands to a WCF command service.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.ServiceModel.ICommandService.Execute(Gentex.MES.Core.Commanding.ServiceModel.ExecuteRequest)">
            <summary>
            Executes the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="T:Gentex.MES.Core.Commanding.Storage.ICommandStore">
            <summary>
            Defines a command storage mechanism.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.Storage.ICommandStore.SaveCommand(Gentex.MES.Core.Commanding.Command)">
            <summary>
            Saves the command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="T:Gentex.MES.Core.Commanding.Storage.InMemoryStorage">
            <summary>
            Represents an in-memory storage mechanism for commands.
            </summary>
        </member>
        <member name="F:Gentex.MES.Core.Commanding.Storage.InMemoryStorage.Commands">
            <summary>
            Gets the commands.
            </summary>
            <value>The commands.</value>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.Storage.InMemoryStorage.SaveCommand(Gentex.MES.Core.Commanding.Command)">
            <summary>
            Saves the command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="T:Gentex.MES.Core.Commanding.Storage.SqlStorage">
            <summary>
            Sql storage implemenation for a command store.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.Storage.SqlStorage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.Storage.SqlStorage"/> class.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.Storage.SqlStorage.#ctor(System.String,Gentex.MES.Core.Serialization.ITypeResolver)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Commanding.Storage.SqlStorage"/> class.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="resolver">The resolver.</param>
        </member>
        <member name="M:Gentex.MES.Core.Commanding.Storage.SqlStorage.SaveCommand(Gentex.MES.Core.Commanding.Command)">
            <summary>
            Saves the command.
            </summary>
            <param name="command">The command.</param>
        </member>
        <member name="T:Gentex.MES.Core.ContractConstants">
            <summary>
            Contract constants.
            </summary>
        </member>
        <member name="F:Gentex.MES.Core.ContractConstants.CommandServiceNamespace">
            <summary>
            Command service namespace.
            </summary>
        </member>
        <member name="F:Gentex.MES.Core.ContractConstants.CommandExecutionNamespace">
            <summary>
            Command execution namespace.
            </summary>
        </member>
        <member name="F:Gentex.MES.Core.ContractConstants.EventHandlingNamespace">
            <summary>
            Eventing namespace.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.DebugLogger">
            <summary>
            A debug output writing log writer implementation.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.ILogger">
            <summary>
            Defines a logging tool.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.ILogger.LogTrace(System.String)">
            <summary>
            Logs the trace message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gentex.MES.Core.ILogger.LogDebug(System.String)">
            <summary>
            Logs the debug message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gentex.MES.Core.ILogger.LogInfo(System.String)">
            <summary>
            Logs the info.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gentex.MES.Core.ILogger.LogWarning(System.String)">
            <summary>
            Logs the warning.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gentex.MES.Core.ILogger.LogError(System.String)">
            <summary>
            Logs the error.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gentex.MES.Core.ILogger.LogFatal(System.String)">
            <summary>
            Logs the fatal message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gentex.MES.Core.DebugLogger.LogTrace(System.String)">
            <summary>
            Logs the trace.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gentex.MES.Core.DebugLogger.LogTrace(System.String,System.Object[])">
            <summary>
            Logs the trace.
            </summary>
            <param name="message">The message.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:Gentex.MES.Core.DebugLogger.LogDebug(System.String)">
            <summary>
            Logs the debug.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gentex.MES.Core.DebugLogger.LogDebug(System.String,System.Object[])">
            <summary>
            Logs the debug.
            </summary>
            <param name="message">The message.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:Gentex.MES.Core.DebugLogger.LogInfo(System.String)">
            <summary>
            Logs the info.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gentex.MES.Core.DebugLogger.LogInfo(System.String,System.Object[])">
            <summary>
            Logs the info.
            </summary>
            <param name="message">The message.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:Gentex.MES.Core.DebugLogger.LogWarning(System.String)">
            <summary>
            Logs the warning.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gentex.MES.Core.DebugLogger.LogWarning(System.String,System.Object[])">
            <summary>
            Logs the warning.
            </summary>
            <param name="message">The message.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:Gentex.MES.Core.DebugLogger.LogError(System.String)">
            <summary>
            Logs the error.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gentex.MES.Core.DebugLogger.LogError(System.String,System.Object[])">
            <summary>
            Logs the error.
            </summary>
            <param name="message">The message.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:Gentex.MES.Core.DebugLogger.LogFatal(System.String)">
            <summary>
            Logs the fatal.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gentex.MES.Core.DebugLogger.LogFatal(System.String,System.Object[])">
            <summary>
            Logs the fatal.
            </summary>
            <param name="message">The message.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="T:Gentex.MES.Core.DateTimeBasedClock">
            <summary>
            A clock that is based on the <see cref="T:System.DateTime"/> class from the .NET framework.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.IClock">
            <summary>
            Represents a clock that can give the current time.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.IClock.Now">
            <summary>
            Gets the current date and time from the clock.
            </summary>
            <returns>The current date and time.</returns>
        </member>
        <member name="M:Gentex.MES.Core.DateTimeBasedClock.Now">
            <summary>
            Gets the current date and time from the clock.
            </summary>
            <returns>The current date and time.</returns>
        </member>
        <member name="T:Gentex.MES.Core.DelegateAdjuster">
            <summary>
            Creates a runtime delegate dynamically for a specified action.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.DelegateAdjuster.CastArgument``2(System.Linq.Expressions.Expression{System.Action{``1}})">
            <summary>
            Casts the argument.
            </summary>
            <typeparam name="TBase">The type of the base.</typeparam>
            <typeparam name="TDerived">The type of the derived.</typeparam>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="T:Gentex.MES.Core.Domain.AggregateMissingParameterlessConstructorException">
            <summary>
            Occurs when an aggregate is missing a parameterless constructor.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Domain.AggregateMissingParameterlessConstructorException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Domain.AggregateMissingParameterlessConstructorException"/> class.
            </summary>
            <param name="ex">The ex.</param>
        </member>
        <member name="T:Gentex.MES.Core.Domain.ISessionFactory">
            <summary>
            Session factory pattern.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Domain.ISessionFactory.CreateSession(System.Guid)">
            <summary>
            Creates the session.
            </summary>
            <param name="commitId">The commit id.</param>
            <returns></returns>
        </member>
        <member name="T:Gentex.MES.Core.Domain.SessionContext">
            <summary>
            Holds the session context for the current thread.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Domain.SessionContext.Bind(Gentex.MES.Core.Domain.ISession)">
            <summary>
            Binds the specified session to the thread context.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:Gentex.MES.Core.Domain.SessionContext.Unbind">
            <summary>
            Unbinds this instance.
            </summary>
        </member>
        <member name="P:Gentex.MES.Core.Domain.SessionContext.Current">
            <summary>
            Gets the current session.
            </summary>
            <value>The current.</value>
        </member>
        <member name="T:Gentex.MES.Core.Domain.SessionFactory">
            <summary>
            Factory pattern implementation for creating a session.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Domain.SessionFactory.CreateSession(System.Guid)">
            <summary>
            Creates the session.
            </summary>
            <param name="commitId">The commit id.</param>
            <returns></returns>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Event">
            <summary>
            The event base class.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Event.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.Event"/> class.
            </summary>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Event.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The event id.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Event.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Event.TimeStamp">
            <summary>
            Gets or sets the time stamp.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Event.AggregateId">
            <summary>
            Gets or sets the aggregate id.
            </summary>
            <value>The aggregate id.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Event.SequenceId">
            <summary>
            Gets or sets the sequence id.
            </summary>
            <value>The sequence id.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Event.CommitId">
            <summary>
            Gets or sets the commit id.
            </summary>
            <value>The commit id.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Event.ExtensionData">
            <summary>
            Gets or sets the structure that contains extra data.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Runtime.Serialization.ExtensionDataObject"/> that contains data that is not recognized as belonging to the data contract.</returns>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.IEventDispatchHandler">
            <summary>
            Handles dispatching groups of events.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.IEventDispatchHandler.HandleDispatch(System.Collections.Generic.IEnumerable{Gentex.MES.Core.Eventing.Event})">
            <summary>
            Handles the dispatch.
            </summary>
            <param name="events">The events.</param>
        </member>
        <member name="T:Gentex.MES.Core.TypeNameAttribute">
            <summary>
            Applies an event name alternative to the event type name.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.TypeNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.TypeNameAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:Gentex.MES.Core.TypeNameAttribute.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.ISnapshottable`1">
            <summary>
            Defines an aggregate root as being snapshottable.
            </summary>
            <typeparam name="T">The type of snapshot the aggregate root will be respresented by.</typeparam>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.ISnapshottable`1.CreateSnapshot">
            <summary>
            Creates the snapshot.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.ISnapshottable`1.RestoreFromSnapshot(System.Int64,System.Int64,`0)">
            <summary>
            Restores from snapshot.
            </summary>
            <param name="id">The id.</param>
            <param name="version">The version.</param>
            <param name="snapshot">The snapshot.</param>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.NoSnapshottingPolicy">
            <summary>
            A snapshotting policy for no snapshots.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.ISnapshotPolicy">
            <summary>
            Defines a snapshotting policy.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.ISnapshotPolicy.ShouldMakeSnapShot(Gentex.MES.Core.Domain.AggregateRoot)">
            <summary>
            Shoulds the make snap shot.
            </summary>
            <param name="aggregate">The aggregate.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.ISnapshotPolicy.IsSnapshotable(System.Type)">
            <summary>
            Determines whether the specified aggregate type is snapshotable.
            </summary>
            <param name="aggregateType">Type of the aggregate.</param>
            <returns>
            	<c>true</c> if the specified aggregate type is snapshotable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.NoSnapshottingPolicy.ShouldMakeSnapShot(Gentex.MES.Core.Domain.AggregateRoot)">
            <summary>
            Shoulds the make snap shot.
            </summary>
            <param name="aggregate">The aggregate.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.NoSnapshottingPolicy.IsSnapshotable(System.Type)">
            <summary>
            Determines whether the specified aggregate type is snapshotable.
            </summary>
            <param name="aggregateType">Type of the aggregate.</param>
            <returns>
            	<c>true</c> if the specified aggregate type is snapshotable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Serialization.EventUpgrader">
            <summary>
            Upgrades events if an internal upgrader has been registered.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Serialization.IEventUpgrader">
            <summary>
            Upgrades an event.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Serialization.IEventUpgrader.Upgrade(Gentex.MES.Core.Eventing.Storage.StoredEvent{Newtonsoft.Json.Linq.JObject})">
            <summary>
            Upgrades the specified stored event.
            </summary>
            <param name="storedEvent">The stored event.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Serialization.EventUpgrader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.Serialization.EventUpgrader"/> class.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Serialization.EventUpgrader.Upgrade(Gentex.MES.Core.Eventing.Storage.StoredEvent{Newtonsoft.Json.Linq.JObject})">
            <summary>
            Upgrades the specified stored event.
            </summary>
            <param name="storedEvent">The stored event.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Serialization.EventUpgrader.AddUpgrader(System.String,Gentex.MES.Core.Eventing.Serialization.IEventUpgrader)">
            <summary>
            Adds the upgrader.
            </summary>
            <param name="eventName">Name of the event.</param>
            <param name="upgrader">The upgrader.</param>
        </member>
        <member name="T:Gentex.MES.Core.Serialization.ConventionBasedTypeResolver">
            <summary>
            Resolves event names to types by convention.
            If an EventNameAttribute is specified, the attribute's value is used.
            Otherwise, the full non-qualified type name and namespace is used.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.Serialization.ITypeResolver">
            <summary>
            Resolves an type or name.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Serialization.ITypeResolver.ResolveType(System.String)">
            <summary>
            Resolves the type.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Serialization.ITypeResolver.TypeNameFor(System.Type)">
            <summary>
            Gets the name for the type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Serialization.ConventionBasedTypeResolver.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Serialization.ConventionBasedTypeResolver"/> class.
            Resolves types from all loaded assemblies.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Serialization.ConventionBasedTypeResolver.ResolveType(System.String)">
            <summary>
            Resolves the type.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Serialization.ConventionBasedTypeResolver.TypeNameFor(System.Type)">
            <summary>
            Returns the type name for.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.ServiceModel.Client">
            <summary>
            A generic WCF event publisher.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.ServiceModel.Client.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.ServiceModel.Client"/> class.
            </summary>
            <param name="binding">The binding.</param>
            <param name="remoteAddress">The remote address.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.ServiceModel.Client.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.ServiceModel.Client"/> class.
            </summary>
            <param name="endpointConfigurationName">Name of the endpoint configuration.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.ServiceModel.Client.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.ServiceModel.Client"/> class.
            </summary>
            <param name="endpointConfigurationName">Name of the endpoint configuration.</param>
            <param name="remoteAddress">The remote address.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.ServiceModel.Client.#ctor(System.String,System.ServiceModel.EndpointAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.ServiceModel.Client"/> class.
            </summary>
            <param name="endpointConfigurationName">Name of the endpoint configuration.</param>
            <param name="remoteAddress">The remote address.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.ServiceModel.Client.Handle(System.Collections.Generic.List{Gentex.MES.Core.Eventing.Event})">
            <summary>
            Handles the specified group of events.
            </summary>
            <param name="events">The events.</param>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.ServiceModel.HandleRequest">
            <summary>
            The publish request containing the event that occurred.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.ServiceModel.HandleRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.ServiceModel.HandleRequest"/> class.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.ServiceModel.HandleRequest.#ctor(System.Collections.Generic.List{Gentex.MES.Core.Eventing.Event})">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.ServiceModel.HandleRequest"/> class.
            </summary>
            <param name="events">The events.</param>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.ServiceModel.HandleRequest.Events">
            <summary>
            Gets or sets the events.
            </summary>
            <value>
            The events.
            </value>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.ServiceModel.IEventHandler">
            <summary>
            Defines an event handling service contract.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.ServiceModel.IEventHandler.Handle(Gentex.MES.Core.Eventing.ServiceModel.HandleRequest)">
            <summary>
            Publishes the specified request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Storage.SqlQueries">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.SqlQueries.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.SqlQueries.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.SqlQueries.AddNewAggregateOrUpdateVersion">
            <summary>
              Looks up a localized string similar to EventStore.AddNewAggregateOrUpdateVersion.
            </summary>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.SqlQueries.AddNewEvent">
            <summary>
              Looks up a localized string similar to EventStore.AddNewEvent.
            </summary>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.SqlQueries.AddSnapshot">
            <summary>
              Looks up a localized string similar to EventStore.AddSnapshot.
            </summary>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.SqlQueries.GetEvents">
            <summary>
              Looks up a localized string similar to EventStore.GetEvents.
            </summary>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.SqlQueries.GetSnapshot">
            <summary>
              Looks up a localized string similar to EventStore.GetSnapshot.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Storage.SqlStorage">
            <summary>
            An MsSql event and snapshot storage implementation.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Storage.IEventStore">
            <summary>
            Defines a event stream storage mechanism.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.IEventStore.SaveEvents(System.Collections.Generic.IEnumerable{Gentex.MES.Core.Eventing.Event})">
            <summary>
            Saves the events.
            </summary>
            <param name="events">The events.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.IEventStore.GetEvents(System.Int64,System.Int64,System.Int64)">
            <summary>
            Gets the events.
            </summary>
            <param name="aggregateId">The aggregate id.</param>
            <param name="fromVersion">From version.</param>
            <param name="toVersion">To version.</param>
            <returns></returns>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Storage.ISnapshotStore">
            <summary>
            
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.ISnapshotStore.GetSnapshot(System.Int64,System.Int64)">
            <summary>
            Gets the snapshot.
            </summary>
            <param name="aggregateId">The aggregate id.</param>
            <param name="maxVersion">The max version.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.ISnapshotStore.SaveSnapshot(Gentex.MES.Core.Eventing.Snapshot)">
            <summary>
            Saves the snapshot.
            </summary>
            <param name="snapshot">The snapshot.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.SqlStorage.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.Storage.SqlStorage"/> class.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.SqlStorage.#ctor(System.String,Gentex.MES.Core.Serialization.ITypeResolver,Gentex.MES.Core.Eventing.Serialization.IEventUpgrader)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.Storage.SqlStorage"/> class.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="typeResolver">The type resolver.</param>
            <param name="upgrader">The upgrader.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.SqlStorage.GetEvents(System.Int64,System.Int64,System.Int64)">
            <summary>
            Gets the events.
            </summary>
            <param name="aggregateId">The aggregate id.</param>
            <param name="fromVersion">From version.</param>
            <param name="toVersion">To version.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.SqlStorage.GetSnapshot(System.Int64,System.Int64)">
            <summary>
            Gets the snapshot.
            </summary>
            <param name="aggregateId">The aggregate id.</param>
            <param name="maxVersion">The max version.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.SqlStorage.SaveEvents(System.Collections.Generic.IEnumerable{Gentex.MES.Core.Eventing.Event})">
            <summary>
            Saves the events.
            </summary>
            <param name="events">The events.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.SqlStorage.SaveSnapshot(Gentex.MES.Core.Eventing.Snapshot)">
            <summary>
            Saves the snapshot.
            </summary>
            <param name="snapshot">The snapshot.</param>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Storage.StoredEvent">
            <summary>
            Represents a stored event.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.StoredEvent.#ctor(System.Guid,System.Int64,System.Int64,System.String,System.Version,System.DateTimeOffset,System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.Storage.StoredEvent"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="aggregateId">The aggregate id.</param>
            <param name="sequenceId">The sequence id.</param>
            <param name="eventName">Name of the event.</param>
            <param name="version">The version.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="commitId">The commit id.</param>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.StoredEvent.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.StoredEvent.EventName">
            <summary>
            Gets or sets the name of the event.
            </summary>
            <value>The name of the event.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.StoredEvent.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.StoredEvent.TimeStamp">
            <summary>
            Gets or sets the time stamp.
            </summary>
            <value>The time stamp.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.StoredEvent.AggregateId">
            <summary>
            Gets or sets the aggregate id.
            </summary>
            <value>The aggregate id.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.StoredEvent.SequenceId">
            <summary>
            Gets or sets the sequence id.
            </summary>
            <value>The sequence id.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.StoredEvent.CommitId">
            <summary>
            Gets or sets the commit id.
            </summary>
            <value>The commit id.</value>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Storage.StoredEvent`1">
            <summary>
            Represents a stored event of type T.
            </summary>
            <typeparam name="T">The event type (serialized or unserialized).</typeparam>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.StoredEvent`1.#ctor(System.Guid,System.Int64,System.Int64,System.String,System.Version,System.DateTimeOffset,System.Guid,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.Storage.StoredEvent`1"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="aggregateId">The aggregate id.</param>
            <param name="sequenceId">The sequence id.</param>
            <param name="eventName">Name of the event.</param>
            <param name="version">The version.</param>
            <param name="timeStamp">The time stamp.</param>
            <param name="commitId">The commit id.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.StoredEvent`1.Clone``1(``0)">
            <summary>
            Clones the specified data.
            </summary>
            <typeparam name="TOther">The type of the other.</typeparam>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Storage.StoredEvent`1.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Storage.ConcurrencyException">
            <summary>
            Occurs when a concurrency error happens when saving an aggregate's even stream.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.Domain.AggregateRoot">
            <summary>
            Aggregate root base class.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Domain.AggregateRoot.GetUncommittedChanges">
            <summary>
            Gets the uncommitted changes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Domain.AggregateRoot.MarkChangesAsCommitted">
            <summary>
            Marks the changes as committed.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Domain.AggregateRoot.LoadFromHistory(System.Collections.Generic.IEnumerable{Gentex.MES.Core.Eventing.Event})">
            <summary>
            Loads from history.
            </summary>
            <param name="changes">The changes.</param>
        </member>
        <member name="M:Gentex.MES.Core.Domain.AggregateRoot.ApplyChange(Gentex.MES.Core.Eventing.Event)">
            <summary>
            Applies the change.
            </summary>
            <param name="event">The @event.</param>
        </member>
        <member name="P:Gentex.MES.Core.Domain.AggregateRoot.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Gentex.MES.Core.Domain.AggregateRoot.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.DefaultSnapshotPolicy">
            <summary>
            A default snapshot policy implementation.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.DefaultSnapshotPolicy.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.DefaultSnapshotPolicy"/> class.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.DefaultSnapshotPolicy.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.DefaultSnapshotPolicy"/> class.
            </summary>
            <param name="snapshotInterval">The snapshot interval.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.DefaultSnapshotPolicy.IsSnapshotable(System.Type)">
            <summary>
            Determines whether the specified aggregate type is snapshotable.
            </summary>
            <param name="aggregateType">Type of the aggregate.</param>
            <returns>
            	<c>true</c> if the specified aggregate type is snapshotable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.DefaultSnapshotPolicy.ShouldMakeSnapShot(Gentex.MES.Core.Domain.AggregateRoot)">
            <summary>
            Returns whether to the make snap shot.
            </summary>
            <param name="aggregate">The aggregate.</param>
            <returns></returns>
        </member>
        <member name="T:Gentex.MES.Core.Serialization.AssemblyQualifiedTypeResolver">
            <summary>
            Resolves event names to types based on their assembly qualified name.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Serialization.AssemblyQualifiedTypeResolver.ResolveType(System.String)">
            <summary>
            Resolves the type.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Serialization.AssemblyQualifiedTypeResolver.TypeNameFor(System.Type)">
            <summary>
            Gets the name for a given type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.EventDescriptor">
            <summary>
            An event descriptor used by the InMemoryStorage event store.
            </summary>
        </member>
        <member name="F:Gentex.MES.Core.Eventing.EventDescriptor.EventData">
            <summary>
            The actual event.
            </summary>
        </member>
        <member name="F:Gentex.MES.Core.Eventing.EventDescriptor.Id">
            <summary>
            The event id.
            </summary>
        </member>
        <member name="F:Gentex.MES.Core.Eventing.EventDescriptor.Version">
            <summary>
            The event version.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.EventDescriptor.#ctor(System.Int64,Gentex.MES.Core.Eventing.Event,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.EventDescriptor"/> struct.
            </summary>
            <param name="id">The id.</param>
            <param name="eventData">The event data.</param>
            <param name="version">The version.</param>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Storage.InMemoryStorage">
            <summary>
            An in-memory event and snapshot storage implementation.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.InMemoryStorage.SaveEvents(System.Collections.Generic.IEnumerable{Gentex.MES.Core.Eventing.Event})">
            <summary>
            Saves the events.
            </summary>
            <param name="events">The events.</param>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.InMemoryStorage.GetEvents(System.Int64,System.Int64,System.Int64)">
            <summary>
            Gets the events.
            </summary>
            <param name="aggregateId">The aggregate id.</param>
            <param name="fromVersion">From version.</param>
            <param name="toVersion">To version.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.InMemoryStorage.GetSnapshot(System.Int64,System.Int64)">
            <summary>
            Gets the snapshot.
            </summary>
            <param name="aggregateId">The aggregate id.</param>
            <param name="maxVersion">The max version.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.InMemoryStorage.SaveSnapshot(Gentex.MES.Core.Eventing.Snapshot)">
            <summary>
            Saves the snapshot.
            </summary>
            <param name="snapshot">The snapshot.</param>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Serialization.IEventTranslator`2">
            <summary>
            Translates an event from one type to another.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TDestination">The type of the destination.</typeparam>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Serialization.IEventTranslator`2.Translate(Gentex.MES.Core.Eventing.Storage.StoredEvent{`0})">
            <summary>
            Translates the specified source.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Serialization.IEventTranslator`2.TranslateBack(Gentex.MES.Core.Eventing.Storage.StoredEvent{`1})">
            <summary>
            Translates the specified destination back.
            </summary>
            <param name="destination">The destination.</param>
            <returns></returns>
        </member>
        <member name="T:Gentex.MES.Core.Serialization.ITypeFormatter`1">
            <summary>
            Defines serialization and deserialization operations for a type.
            </summary>
            <typeparam name="T">The type to serialize to and deserialize from.</typeparam>
        </member>
        <member name="M:Gentex.MES.Core.Serialization.ITypeFormatter`1.Deserialize(`0,System.Type)">
            <summary>
            Deserializes the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="eventType">Type of the event.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Serialization.ITypeFormatter`1.Serialize(System.Object)">
            <summary>
            Serializes the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Snapshot">
            <summary>
            A conventional snapshot object.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Snapshot.#ctor(System.Int64,System.Int64,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Eventing.Snapshot"/> class.
            </summary>
            <param name="aggregateId">The aggregate id.</param>
            <param name="version">The version.</param>
            <param name="data">The data.</param>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Snapshot.AggregateId">
            <summary>
            Gets or sets the aggregate id.
            </summary>
            <value>The aggregate id.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Snapshot.Version">
            <summary>
            Gets or sets the version.
            </summary>
            <value>The version.</value>
        </member>
        <member name="P:Gentex.MES.Core.Eventing.Snapshot.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Serialization.JObjectToStringTranslator">
            <summary>
            Translates events serialized as JObjects to string and back.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Serialization.JObjectToStringTranslator.Translate(Gentex.MES.Core.Eventing.Storage.StoredEvent{Newtonsoft.Json.Linq.JObject})">
            <summary>
            Translates the specified source.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Serialization.JObjectToStringTranslator.TranslateBack(Gentex.MES.Core.Eventing.Storage.StoredEvent{System.String})">
            <summary>
            Translates the back.
            </summary>
            <param name="destination">The destination.</param>
            <returns></returns>
        </member>
        <member name="T:Gentex.MES.Core.Serialization.JsonTypeFormatter">
            <summary>
            Formats a type as JObject and back.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Serialization.JsonTypeFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Serialization.JsonTypeFormatter"/> class.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Serialization.JsonTypeFormatter.Deserialize(Newtonsoft.Json.Linq.JObject,System.Type)">
            <summary>
            Deserializes the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Serialization.JsonTypeFormatter.Serialize(System.Object)">
            <summary>
            Serializes the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:Gentex.MES.Core.Eventing.Storage.NullSnapshotStore">
            <summary>
            A null snapshot store implementation, facilitating snapshot storage mocking.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.NullSnapshotStore.GetSnapshot(System.Int64,System.Int64)">
            <summary>
            Gets the snapshot. Always returns null.
            </summary>
            <param name="id">The id.</param>
            <param name="maxVersion">The max version.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Eventing.Storage.NullSnapshotStore.SaveSnapshot(Gentex.MES.Core.Eventing.Snapshot)">
            <summary>
            Saves the snapshot. Does nothing.
            </summary>
            <param name="snapshot">The snapshot.</param>
        </member>
        <member name="T:Gentex.MES.Core.Domain.ISession">
            <summary>
            Defines a paradigm for getting aggregates and committing changes.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Domain.ISession.Get``1(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Gets the aggregate root with the specified id.
            </summary>
            <typeparam name="T">The aggregate root type.</typeparam>
            <param name="id">The id.</param>
            <param name="expectedVersion">The expected version.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Domain.ISession.Commit">
            <summary>
            Commits all aggregate root changes.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.Domain.Session">
            <summary>
            Implementation of a unit of work for getting aggregate roots and committing changes.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Domain.Session.#ctor(System.Guid,Gentex.MES.Core.Eventing.Storage.IEventStore,Gentex.MES.Core.Eventing.IEventDispatcher,Gentex.MES.Core.Eventing.Storage.ISnapshotStore,Gentex.MES.Core.Eventing.ISnapshotPolicy)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.Domain.Session"/> class.
            </summary>
            <param name="commitId">The commit id.</param>
            <param name="storage">The storage.</param>
            <param name="dispatcher">The dispatcher.</param>
            <param name="snapshotStore">The snapshot store.</param>
            <param name="snapshotPolicy">The snapshot policy.</param>
        </member>
        <member name="M:Gentex.MES.Core.Domain.Session.Commit">
            <summary>
            Commits all aggregate root changes.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Domain.Session.Get``1(System.Int64,System.Nullable{System.Int64})">
            <summary>
            Gets the aggregate root with the specified id.
            </summary>
            <typeparam name="T">The aggregate root type.</typeparam>
            <param name="id">The id.</param>
            <param name="expectedVersion">The expected version.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.Domain.Session.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.Domain.Session.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Gentex.MES.Core.Domain.Session.IsDisposed">
            <summary>
            Gets or sets a value indicating whether this instance is disposed.
            </summary>
            <value>
            	<c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Gentex.MES.Core.IGuidGenerator">
            <summary>
            Generator that generates unique identifiers.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.IGuidGenerator.NewId">
            <summary>
            Generates the new identifier.
            </summary>
            <returns>A new <see cref="T:System.Guid"/>.</returns>
        </member>
        <member name="T:Gentex.MES.Core.IHandler`1">
            <summary>
            Defines a message handler.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Gentex.MES.Core.IHandler`1.Handle(`0)">
            <summary>
            Handles the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Gentex.MES.Core.InstanceNotRegisteredException">
            <summary>
            Occurs when an instance for a specified interface cannot be found in ther service registry.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.InstanceNotRegisteredException.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.InstanceNotRegisteredException"/> class.
            </summary>
            <param name="requestedType">Type of the requested.</param>
        </member>
        <member name="M:Gentex.MES.Core.InstanceNotRegisteredException.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.InstanceNotRegisteredException"/> class.
            </summary>
            <param name="requestedType">Type of the requested.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Gentex.MES.Core.InstanceNotRegisteredException.#ctor(System.Type,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Gentex.MES.Core.InstanceNotRegisteredException"/> class.
            </summary>
            <param name="requestedType">Type of the requested.</param>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Gentex.MES.Core.InstanceNotRegisteredException.BuildDefaultMessage(System.Type)">
            <summary>
            Builds the default message.
            </summary>
            <param name="requestedType">Type of the requested.</param>
            <returns></returns>
        </member>
        <member name="P:Gentex.MES.Core.InstanceNotRegisteredException.RequestedType">
            <summary>
            Gets or sets the requested type.
            </summary>
            <value>The requested type.</value>
        </member>
        <member name="T:Gentex.MES.Core.IServiceLocator">
            <summary>
            Defines a service locator.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.IServiceLocator.TryGet``1(``0@)">
            <summary>
            Tries to get the specified type.
            </summary>
            <typeparam name="T">The type to locate.</typeparam>
            <param name="result">The instance of type T.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.IServiceLocator.TryGet(System.Type,System.Object@)">
            <summary>
            Tries to get the specified type.
            </summary>
            <param name="type">The type to locate.</param>
            <param name="result">The intsance of the type..</param>
            <returns></returns>
        </member>
        <member name="T:Gentex.MES.Core.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Gentex.MES.Core.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Gentex.MES.Core.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Gentex.MES.Core.Properties.Resources.EndpointAddress">
            <summary>
              Looks up a localized string similar to http://zvm-msgprod/MES/Domain.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.SequentialGuidGenerator">
            <summary>
            An <see cref="T:Gentex.MES.Core.IGuidGenerator"/> that generates <see cref="T:System.Guid"/> values 
            using a strategy suggested Jimmy Nilsson's 
            <a href="http://www.informit.com/articles/article.asp?p=25862">article</a>.
            </summary>
            <remarks>
            The <c>comb</c> algorithm is designed to make the use of GUIDs as Primary Keys, Foreign Keys, 
            and Indexes nearly as efficient as ints.
            </remarks>
        </member>
        <member name="M:Gentex.MES.Core.SequentialGuidGenerator.NewId">
            <summary>
            Generate a new <see cref="T:System.Guid"/> using the comb algorithm.
            </summary>
        </member>
        <member name="T:Gentex.MES.Core.ServiceRegistry">
            <summary>
            The MES Service Registry. This class gives access to other components registered in this environment.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.ServiceRegistry.#cctor">
            <summary>
            Initializes the <see cref="T:Gentex.MES.Core.ServiceRegistry"/> class.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.ServiceRegistry.ClearConfiguration">
            <summary>
            Clears the configuration.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.ServiceRegistry.Configure(Gentex.MES.Core.IServiceLocator)">
            <summary>
            Configures the specified service locator.
            </summary>
            <param name="serviceLocator">The service locator.</param>
        </member>
        <member name="M:Gentex.MES.Core.ServiceRegistry.Get``1">
            <summary>
            Gets this instance.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.ServiceRegistry.Get(System.Type)">
            <summary>
            Gets the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Gentex.MES.Core.ServiceRegistry.RemoveDefault``1">
            <summary>
            Removes the default.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Gentex.MES.Core.ServiceRegistry.SetDefault``1(``0)">
            <summary>
            Sets the default.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="service">The service.</param>
        </member>
        <member name="P:Gentex.MES.Core.ServiceRegistry.IsConfigured">
            <summary>
            Gets a value indicating whether this instance is configured.
            </summary>
            <value>
            	<c>true</c> if this instance is configured; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Gentex.MES.Core.StandardGuidGenerator">
            <summary>
            A unique identifier generator based on the .Net <see cref="T:System.Guid"/> class.
            </summary>
        </member>
        <member name="M:Gentex.MES.Core.StandardGuidGenerator.NewId">
            <summary>
            Generates a new <see cref="T:System.Guid"/> based on the <see cref="M:System.Guid.NewGuid"/> method.
            </summary>
            <returns>A new generated <see cref="T:System.Guid"/>.</returns>
        </member>
    </members>
</doc>
